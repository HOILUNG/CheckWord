<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>最佳、最具、最爱、最赚、最优、最优秀、最好、最大程度、最大、最高级、最高端、最高、最奢侈、最多、最低级、最低价、最底、最便宜、史上最低价、最低、最流行、最受欢迎、最时尚、最聚拢、最符合、最舒适、最先、最先进、最先进科学、最后、最新、最新技术、最新科学、最、中国第一、全网第一、全新、销量第一、排名第一、唯一、第一品牌、NO.1、TOP1、独一无二、全国第一、一流、一天、仅此一次（一款）、最后一波、全国X大品牌之一、第一、销冠、国家级、国际级、世界级、千万级、百万级、星级、5A、甲级、超甲级、顶级、顶尖、尖端、顶级享受、高级、极品、极佳、绝佳、绝对、终极、极致、致极、极具、完美、绝佳、极佳、至尊、至臻、臻品、臻致、臻席、压轴、问鼎、空前、绝后、绝版、无双、非此莫属、巅峰、前所未有、无人能及、顶级、鼎级、鼎冠、定鼎、完美、翘楚之作、不可再生、不可复制、绝无仅有、寸土寸金、淋漓尽致、无与伦比、唯一、卓越、卓著、前无古人后无来者、绝版、祖传、珍稀、臻稀、稀少、绝无仅有、绝不在有、稀世珍宝、千金难求、世所罕见、不可多得、空前绝后、寥寥无几、屈指可数、独家、独创、独据、开发者、缔造者、创始者、发明者、首个、首选、首发、首席、首府、首选、首屈一指、全国首家、首家、首创、国家领导人、国门、国宅、首次、填补国内空白、国际品质、黄金旺铺、黄金价值、黄金地段、金钱、金融汇币图片、外国货币、大牌、金牌、名牌、王牌、领先上市、巨星、著名、掌门人、领袖品牌、至尊、冠军、之王、王者楼王、墅王、王、皇家、世界领先、（遥遥）领先、领导者、领袖、引领、创领、领航、耀领、史无前例、前无古人、永久、万能、百分之百、绝无仅有、特供、专供、专家推荐、国家、领导人推荐、使用人民币图样（央行批准除外）、点击领奖、恭喜获奖、全民免单、点击有惊喜、点击获取、点击转身、领取奖品、抽奖。礼品（需标明名称、价格、数量截止日期）、售罄、售空、再不抢就没了、史上最低价、不会再便宜、没有他就xx、错过不再/错过即无（错过就没机会了）、未曾有过的、万人疯抢、全民疯抢/抢购、免费领、免费住、0首付、（免首付）、零距离、价格你来定、不得单独出现外国文字（出现外国文字需要注明汉语）、认不出毛笔字、繁体字、没有版权的字体（汉仪）、公民肖像权、儿童肖像权、明星肖像权、名人肖像权、名人卡通形象、动画片卡通形象、学校名称、升学、教育护航、九年制教育、一站式教育、入住学区房、优先入学、12年教育无忧、全程无忧、让孩子赢在起跑线上、承诺户口、蓝印户口、承诺移民、买个房啥都解决了、上风上水、聚财纳气、宝地、圣地、府邸、龙脉（贵脉）、东西方神话人物、龙脉之地、风水宝地、天人合一、天干地支品上山上水—享上等上城、堪舆、帝都、皇城、皇室领地、皇家、皇室、皇族、殿堂、白宫、王府（府邸）、皇室住所、政府机关、行政大楼、XX使馆、XX境线、贵族、高贵、隐贵、上流、层峰、富人区、名门、XX阶层、XX阶级、国家大型赛事（冬奥会、奥林匹克运动会、世界杯）、双十一、升值价值、价值洼地、价值天成、千亿价值、投资回报、众筹、抄涨、炒股不如买房、升值潜力无线、买到即赚到、得房率%、XX亩、XX公里、XX平方米、热销X亿、%绿化率、%容积率、热销X亿、热销/成交XXX套、XXX位业主、直达家门口、地铁上盖、咫尺地铁站、万亩公园、几大商场环绕、万达在旁、机场辐射区、超市、商场、学校、医院等名称、X条地铁、X条公交（经查证属实）、地铁旁（需1公里范围内）、CBD坐标、CBD核心、城市核心地段、你在城心、我在你心、中央、中心、重心、中枢、重点、腹地、地标、城市中央、凌驾于世界之上、限时必须具体时间（今日、今天）几天几夜、倒计时、趁现在、仅限、周末、周年庆、特惠趴、购物大趴、闪购、品牌团（必须有活动日期）、随时结束、随时涨价、马上降价</value>
  </data>
</root>